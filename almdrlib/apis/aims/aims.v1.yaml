openapi: 3.0.2
info:
  title: AIMS Service
  version: '1.0'
  description: 'Access and Identity Management Service'
  contact:
    email: support@alertlogic.com
    name: Alert Logic Support
  x-alertlogic-iws-service:
    type: public
servers:
  - url: 'https://api.global-services.global.alertlogic.com'
    description: production
    x-alertlogic-session-endpoint: true
  - url: 'https://api.global-integration.product.dev.alertlogic.com'
    description: integration
    x-alertlogic-session-endpoint: true
paths:
  '/aims/v1/{account_id}/account':
    parameters:
      - $ref: '#/components/parameters/AccountId'
    get:
      summary: Get Account Details
      operationId: get_account_details
      description: Get account details
      tags:
        - AIMS Account Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/account"
        - lang: Python
          source: |
            import almdrlib
            from almdrlib.session import Session

            session = Session(access_key_id="mykey", secret_key="mysecret")
            aims = session.client("aims")
            res = aims.get_account_details(account_id = "111111111")
            print(res.json())
        - lang: Shell
          label: alcli
          source: |
            $alcli aims get_account_details --account_id 11111
    post:
      summary: Update Account Details
      operationId: update_account_details
      description: 'To update an account, the client must have permission to update the specified account (`aims:<account_id>:update:account`). The `mfa_required` field may be updated by any client with this permission.'
      tags:
        - AIMS Account Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
              examples:
                'Update Account Response':
                  value:
                    id: '12345678'
                    name: Company Name
                    active: true
                    version: 2
                    accessible_locations:
                      - insight-us-virginia
                    default_location: insight-us-virginia
                    mfa_required: true
                    created:
                      at: 1430184599
                      by: System
                    modified:
                      at: 1430189634
                      by: System
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_account_name
                      - account_inactive
                      - invalid_json
                      - invalid_property
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
        '413':
          $ref: '#/components/responses/RequestEntityTooLarge'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_required:
                  type: boolean
                  description: Determines whether multi-factor authentication (MFA) is required for users of the account. Defaults to `false`.
            examples:
              'Update Account Details Response':
                value:
                  name: Company Name
                  active: true
                  accessible_locations:
                    - insight-us-virginia
                  default_location: insight-us-virginia
                  mfa_required: true
        description: 'To update an account, the client must have permission to update the specified account (aims:<account_id>:update:account). The `mfa_required` field may be updated by any client with this permission.'
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X POST -d '{"mfa_required": true}' "https://api.global-services.global.alertlogic.co/aims/v1/12345678/account"
  '/aims/v1/{account_id}/accounts/{relationship}/topology':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - in: path
        schema:
          type: string
          enum:
            - managed
            - managing
        name: relationship
        required: true
        description: 'Account relationship. Note that this does not support `bills_to` relationship yet.'
    get:
      summary: Get Account Relationship Topology
      operationId: get_account_relationship_topology
      description:  |-
        This endpoint render's an accounts related accounts topologically by adding a `:relationship`
        field to the account object, which contains an array of accounts that are directly related to it.
        In turn, each of those accounts is decorated with a `:relationship` field that contains the
        (similarly decorated) accounts directly related to it. This continues recursively till a "leaf"
        account (an account with no direct relationships) is decorated with `{"<relationship>": []}`.
        Clients may use this endpoint to understand how an accounts related accounts are related to
        each other, e.g., understanding "direct descendants," "direct ancestors," "grand ancestors," etc.
        
        Note that the `managing` account relationship is the inverse of the `managed` relationship. That
        is, looking up the `managing` relationship returns the list of accounts that have a `managed`
        relationship to the given `account_id`. This list shows **only** accounts which the calling client
        is authorized to view, so, for example, looking up `managing` accounts for the client's own
        account will result in an empty topology regardless of whether accounts not visible to
        the client have a `managed` relationship to the given `account_id`.
      tags:
        - AIMS Account Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  topology:
                    type: object
                    items:
                      $ref: '#/components/schemas/Topology'
              examples:
                'Managed relationship topology':
                  value:
                    topology:
                      - id: '12876543'
                        managed:
                          - id: '12876544'
                            managed: []
                'Managed relationship topology (fields=active,id,name)':
                  value:
                    topology:
                      - active: true
                        id: '12876543'
                        managed:
                          - active: true
                            id: '12876544'
                            managed: []
                            name: 'A Child Company Name'
                        name: 'Another Company Name'
                'Managed relationship topology (all fields)':
                  value:
                    topology:
                      - accessible_locations: ["insight-us-virginia"]
                        active: true
                        created:
                          - at: 1430184599
                          - by: 'System'
                        default_location: 'insight-us-virginia'
                        id: '12876543'
                        managed:
                          - active: true
                            created:
                              - at: 1430184599
                              - by: 'System'
                            default_location: 'insight-us-virginia'
                            id: '12876544'
                            managed: []
                            mfa_required: false
                            modified:
                              - at: 1430184599
                              - by: 'System'
                            name: 'A Child Company Name'
                            version: 1
                        mfa_required: false,
                        modified:
                          - at: 1430184599
                          - by: 'System'
                        name: 'Another Company Name'
                        version: 1
                'Managing relationship topology (fields=active,id,name)':
                  value:
                    topology:
                      - active: true
                        id: '12876543'
                        managing:
                          - active: true
                            id: '2'
                            managing: []
                            name: 'Alert Logic, Inc.'
                        name: 'Another Company Name'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_accessible_locations
                      - invalid_relationship
                      - invalid_option
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '410':
          $ref: '#/components/responses/Gone'
      parameters:
        - $ref: '#/components/parameters/AccessibleLocations'
        - $ref: '#/components/parameters/Active'
        - $ref: '#/components/parameters/Fields'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample (managed relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/managed/topology"
        - lang: Shell
          label: Request Sample (managed relationship with name, id fields)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/managed/topology?fields=name,id"
        - lang: Shell
          label: Request Sample (managing relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/managing/topology"
        - lang: Shell
          label: Request Sample (managed relationship filtered by accessible_location)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/managed/topology?active=true&accessible_locations=insight-us-virginia"
  '/aims/v1/{account_id}/accounts/{relationship}/{related_account_id}':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/Relationship'
      - $ref: '#/components/parameters/RelatedAccountId'
    get:
      summary: Get Account Relationship
      operationId: get_account_relationship
      description: |-
        Check if the specified relationship between two accounts exists.
        Responds with `204 No Content` if the specified relationship exists between the two accounts. Responds with `404 Not Found`
        if the relationship between the two accounts does not exist.

        Note that both the given `account_id` and `related_account_id` must be visible to the client. If
        either is not, a `403 Forbidden` is returned to the client.
      tags:
        - AIMS Account Resources
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample (managed relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/managed/87654321"
        - lang: Shell
          label: Request Sample (managing relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/managing/87654321"\
        - lang: Shell
          label: Request Sample (bills_to relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/bills_to/87654321"
  '/aims/v1/accounts/name/{name}':
    parameters:
      - $ref: '#/components/parameters/AccountName'
    get:
      summary: Get Details of Accounts By Name
      operationId: get_accounts_details_by_name
      description: |-
        Returns a list of accounts having the given `name` that the client has permission to access.

        Note that if an empty list is returned, it may mean that an account with the name exists, but the client does not have permission to access it.
      tags:
        - AIMS Account Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
              examples:
                'Get Accounts by Name response':
                  value:
                    accounts:
                      - id: '12341234'
                        name: Test Account
                        active: true
                        version: 1
                        accessible_locations:
                          - insight-us-virginia
                        default_location: insight-us-virginia
                        modified:
                          by: System
                          at: 1430184599
                        created:
                          by: System
                          at: 1430184599
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/accounts/name/Test%20Account"
      security:
        - x-aims-auth-token: []
  '/aims/v1/{account_id}/account_ids/{relationship}':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/Relationship'
    get:
      summary: List Account IDs by Relationship
      operationId: list_account_ids_by_relationship
      description: |-
        Note that the `managing` account relationship is the inverse of the `managed` relationship. That
        is, looking up account IDs by the `managing` relationship denotes the list of account IDs that
        have a `managed` relationship to the given `account_id`. This list shows **only** account IDs which
        the calling client is authorized to view, so, for example, looking up `managing` account IDs for
        the client's own account will return an empty list regardless of whether accounts not visible to
        the client have a `managed` relationship to the given `account_id`.
      tags:
        - AIMS Account Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_ids:
                    type: array
                    items:
                      type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_accessible_locations
                      - invalid_relationship
                      - invalid_option
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      parameters:
        - $ref: '#/components/parameters/Active'
        - $ref: '#/components/parameters/AccessibleLocations'
        - $ref: '#/components/parameters/MFARequired'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample (managed relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/account_ids/managed?active=true"
        - lang: Shell
          label: Request Sample (managing relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/account_ids/managing?active=true"
        - lang: Shell
          label: Request Sample (bills_to relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/account_ids/bills_to?active=true"
        - lang: Shell
          label: Request Sample (managed relationship filtered by accessible_location)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/account_ids/managed?active=true&accessible_locations=insight-us-virginia"
  '/aims/v1/{account_id}/accounts/{relationship}':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/Relationship'
    get:
      summary: List Accounts by Relationship
      operationId: list_accounts_by_relationship
      description: |-
        Note that the `managing` account relationship is the inverse of the `managed` relationship. That
        is, looking up the `managing` relationship returns the list of accounts that have a `managed`
        relationship to the given `account_id`. This list shows **only** accounts which the calling client
        is authorized to view, so, for example, looking up `managing` accounts for the client's own
        account will return an empty list regardless of whether accounts not visible to the client have
        a `managed` relationship to the given `account_id`.
      tags:
        - AIMS Account Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  accounts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Account'
              examples:
                'List Relationship Result':
                  value:
                    accounts:
                      - id: '12876543'
                        name: Another Company Name
                        active: true
                        version: 1
                        accessible_locations:
                          - insight-us-virginia
                        default_location: insight-us-virginia
                        created:
                          at: 1430184599
                          by: System
                        modified:
                          at: 1430184599
                          by: System
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_accessible_locations
                      - invalid_relationship
                      - invalid_option
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      parameters:
        - $ref: '#/components/parameters/Active'
        - $ref: '#/components/parameters/AccessibleLocations'
        - $ref: '#/components/parameters/MFARequired'
      x-codeSamples:
        - lang: Shell
          label: Request Sample (managed relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/managed?active=true"
        - lang: Shell
          label: Request Sample (managing relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/managing?active=true"
        - lang: Shell
          label: Request Sample (bills_to relationship)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/bills_to?active=true"
        - lang: Shell
          label: Request Sample (managed relationship filtered by accessible_location)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/accounts/managed?active=true&accessible_locations=insight-us-virginia"
  '/aims/v1/change_password':
    post:
      summary: "Change a User's Password"
      operationId: change_password
      description: |-
        The new password must conform to the following standards:

        - Cannot be identical to current or previous passwords (up to 4 previous passwords checked)
        - Length of at least 12 characters
        - Contain three of four possible character types:
          - Upper case characters
          - Lower case characters
          - Numbers
          - Special characters (``!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~``)
        - Passwords can be specified as UTF-8. Characters in languages that do not have upper or lower case variants qualify as either upper or lower case.
      tags:
        - AIMS Authentication and Authorization Resources
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - weak_password
                      - password_reuse_prevented
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: ''
              properties:
                email:
                  type: string
                  description: Email address
                current_password:
                  type: string
                  description: Current password
                new_password:
                  type: string
                  description: New password
              required:
                - email
                - current_password
                - new_password
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X POST -d '{"email": "admin@company.com", "current_password": "Aa8^6;C28e748C", "new_password": "Fraudulent$Foes"}' "https://api.global-services.global.alertlogic.com/aims/v1/change_password"
  '/aims/v1/token_info':
    get:
      summary: Get Authentication Token Information
      operationId: get_token_info
      description: 'Obtain Authentication Token Information (Account, User, Roles, etc.)'
      tags:
        - AIMS Authentication and Authorization Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  account:
                    $ref: '#/components/schemas/Account'
                  entity_id:
                    type: string
                  entity_type:
                    type: string
                  requester_id:
                    type: string
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                  token_expiration:
                    type: number
                  user:
                    $ref: '#/components/schemas/User'
              examples:
                'Token Information Response':
                  value:
                    account:
                      id: '12345678'
                      name: Company Name
                      active: true
                      version: 1
                      accessible_locations:
                        - insight-us-virginia
                      default_location: insight-us-virginia
                      created:
                        at: 1430184599
                        by: System
                      modified:
                        at: 1430184599
                        by: System
                    entity_id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                    entity_type: user
                    requester_id: '12345678:user:715A4EC0-9833-4D6E-9C03-A537E3F98D23'
                    roles:
                      - id: F578CCE5-9574-4489-BF05-A04075838DE3
                        account_id: '12345678'
                        name: Read Only
                        permissions:
                          '*:own:list:*': allowed
                          '*:own:get:*': allowed
                        legacy_permissions: []
                        version: 1
                        created:
                          at: 1430184599
                          by: System
                        modified:
                          at: 1430184599
                          by: System
                    token_expiration: 1524779722
                    user:
                      id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                      account_id: '12345678'
                      name: Bob Dobalina
                      username: admin@company.com
                      email: admin@company.com
                      active: true
                      locked: false
                      version: 1
                      linked_users:
                        - location: defender-us-denver
                          user_id: 102
                      created:
                        at: 1430185015
                        by: System
                      modified:
                        at: 1430185015
                        by: System
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/token_info"
  '/aims/v1/reset_password':
    post:
      summary: Initiate Password Reset
      operationId: initiate_password_reset
      description: Initiate the password reset process for a user
      tags:
        - AIMS Authentication and Authorization Resources
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: Email address
                return_to:
                  type: string
                  description: "A URL to return to after successfully resetting the user's password"
              required:
                - email
                - return_to
            examples:
              'Inititiate Password Reset':
                value:
                  email: admin@company.com
                  return_to: 'https://console.alertlogic.net'
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X POST -d '{"email": "admin@company.com", "return_to": "https://console.alertlogic.net"}' "https://api.global-services.global.alertlogic.com/aims/v1/reset_password"
  '/aims/v1/reset_password/{token}':
    parameters:
      - $ref: '#/components/parameters/PasswordResetToken'
    put:
      summary: Reset Password
      operationId: reset_password
      description: |-
        Reset a user's password using a token

        The token is emailed to a user's `email` when `POST /aims/v1/reset_password` is called successfully.
        
        The new password must conform to the following standards:
        - Cannot be identical to current or previous passwords (up to 4 previous passwords checked)
        - Length of at least 12 characters
        - Contain three of four possible character types:
          - Upper case characters
          - Lower case characters
          - Numbers
          - Special characters (!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~)

        Passwords can be specified as UTF-8. Characters in languages that do not have upper or lower case variants qualify as either upper or lower case.
      tags:
        - AIMS Authentication and Authorization Resources
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - weak_password
                      - password_reuse_prevented
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                  description: New password
              required:
                - password
            examples:
              'Password Reset Payload':
                value:
                  password: Aa8^6;C28e748C
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X PUT -d '{"password": "Aa8^6;C28e748C"}' "https://api.global-services.global.alertlogic.com/aims/v1/reset_password/69EtspCz3c4"
  '/aims/v1/{account_id}/roles':
    parameters:
      - $ref: '#/components/parameters/AccountId'
    post:
      summary: Create Role
      operationId: create_role
      description: Create a role
      tags:
        - AIMS Role Resources
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_json
                      - invalid_permissions
                      - missing_required_property
                      - invalid_property
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
        '413':
          $ref: '#/components/responses/RequestEntityTooLarge'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Role name'
                permissions:
                  type: object
                  description: 'Role permissions'
              required:
                - name
                - permissions
            examples:
              'Create Role Request':
                value:
                  name: Super Mega Power User
                  permissions:
                    '*:own:*:*': allowed
                    'aims:own:grant:*': allowed
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X POST -d '{"name": "Super Mega Power User", "permissions": {"*:own:*:*": "allowed", "aims:own:grant:*":"allowed"}}' "https://api.global-services.global.alertlogic.com/aims/v1/12345678/roles"
    get:
      summary: List Roles
      operationId: list_roles
      description: |
        List roles for an account. Global roles are included in the list.
      tags:
        - AIMS Role Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/12345678/roles"
  '/aims/v1/{account_id}/roles/{role_id}':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/RoleId'
    delete:
      summary: Delete Role
      operationId: delete_role
      description: 'Role deletion is permanent. Due to caching and the distributed nature of the data store, role deletion is also asynchronous; as a result, clients may be able to retrieve the deleted role (and grants of it to users) for a brief period after deleting it.'
      tags:
        - AIMS Role Resources
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X DELETE "https://api.global-services.global.alertlogic.com/aims/v1/12345678/roles/C7C5BE57-F199-4F14-BCB5-43E31CA02842"
    get:
      summary: Get Role Details
      operationId: get_role_details
      description: Get role.
      tags:
        - AIMS Role Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
              examples:
                'Get Role Response':
                  value:
                    id: 2A33175D-86EF-44B5-AA39-C9549F6306DF
                    account_id: '12345678'
                    name: Power User
                    permissions:
                      'aims:own:revoke:*': denied
                      'aims:own:grant:*': denied
                      'aims:own:delete:*': denied
                      'aims:own:update:*': denied
                      'aims:own:create:*': denied
                      '*:own:*:*': allowed
                    legacy_permissions: []
                    version: 1
                    created:
                      at: 1430184599
                      by: System
                    modified:
                      at: 1430184599
                      by: System
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/12345678/roles/C7C5BE57-F199-4F14-BCB5-43E31CA02842"
    post:
      summary: Update Role Details
      operationId: update_role_details
      description: "The role's name, permissions, or both may be updated."
      tags:
        - AIMS Role Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
              examples:
                'Update Role Details Response':
                  value:
                    id: 2A33175D-86EF-44B5-AA39-C9549F6306DF
                    account_id: '12345678'
                    name: Mega Power User
                    permissions:
                      'aims:own:grant:*': allowed
                      '*:own:*:*': allowed
                    legacy_permissions: []
                    version: 2
                    created:
                      at: 1430184599
                      by: System
                    modified:
                      at: 1430185936
                      by: System
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_json
                      - invalid_property
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
        '413':
          $ref: '#/components/responses/RequestEntityTooLarge'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Role Name
                permissions:
                  type: object
                  description: Role Permissions
            examples:
              'Update Role Details Request':
                value:
                  name: Mega Power User
                  permissions:
                    '*:own:*:*': allowed
                    'aims:own:grant:*': allowed
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X POST -d '{"name": "Mega Power User", "permissions": {"*:own:*:*": "allowed", "aims:own:grant:*":"allowed"}}' "https://api.global-services.global.alertlogic.com/aims/v1/12345678/roles/2A33175D-86EF-44B5-AA39-C9549F6306DF"
  '/aims/v1/roles/{role_id}':
    parameters:
      - $ref: '#/components/parameters/RoleId'
    get:
      summary: Get Global Role Details
      operationId: get_global_role_details
      description: |
        Get global role, a role that is shared among accounts.
      tags:
        - AIMS Role Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
              examples:
                'Get Global Role Details Response':
                  value:
                    id: 2A33175D-86EF-44B5-AA39-C9549F6306DF
                    account_id: '*'
                    name: Power User
                    permissions:
                      'aims:own:revoke:*': denied
                      'aims:own:grant:*': denied
                      'aims:own:delete:*': denied
                      'aims:own:update:*': denied
                      'aims:own:create:*': denied
                      '*:own:*:*': allowed
                    legacy_permissions: []
                    version: 1
                    global: true
                    created:
                      at: 1430184599
                      by: System
                    modified:
                      at: 1430184599
                      by: System
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/roles/2A33175D-86EF-44B5-AA39-C9549F6306DF"
  '/aims/v1/roles':
    get:
      summary: List Global Roles
      operationId: list_global_roles
      description: |
        List global roles, roles that are shared among all accounts.
      tags:
        - AIMS Role Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
              examples:
                'List Global Roles Response':
                  value:
                    roles:
                      - id: F578CCE5-9574-4489-BF05-A04075838DE3
                        account_id: '*'
                        name: Read Only
                        permissions:
                          '*:own:list:*': allowed
                          '*:own:get:*': allowed
                        legacy_permissions: []
                        version: 1
                        global: true
                        created:
                          at: 1430184599
                          by: System
                        modified:
                          at: 1430184599
                          by: System
                      - id: 2A33175D-86EF-44B5-AA39-C9549F6306DF
                        account_id: '*'
                        name: Power User
                        permissions:
                          'aims:own:revoke:*': denied
                          'aims:own:grant:*': denied
                          'aims:own:delete:*': denied
                          'aims:own:update:*': denied
                          'aims:own:create:*': denied
                          '*:own:*:*': allowed
                        legacy_permissions: []
                        version: 1
                        global: true
                        created:
                          at: 1430184599
                          by: System
                        modified:
                          at: 1430184599
                          by: System
                      - id: 4389AB00-BBCC-4EB1-83E9-7A906A452BF0
                        account_id: '*'
                        name: Administrator
                        permissions:
                          '*:own:*:*': allowed
                        legacy_permissions: []
                        version: 1
                        global: true
                        created:
                          at: 1430184599
                          by: System
                        modified:
                          at: 1430184599
                          by: System
        '401':
          $ref: '#/components/responses/Unauthorized'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/roles"
  '/aims/v1/user/mfa/enroll':
    post:
      summary: Enroll User Multi-Factor Authentication Device
      operationId: mfa_enroll
      description: |-
        Enroll a user in multi-factor authentication. Requires either username/password or a valid `x-aims-session-token` header to enroll. The user must input an [RFC 6238](https://tools.ietf.org/html/rfc6238) compatible Time-based One-Time Password secret as an otpauth:// format URI (See [Google Authenticator's Key URI Format Docs](https://github.com/google/google-authenticator/wiki/Key-Uri-Format) for complete details). The following parameters must be set in the mfa_uri:

        * `TYPE` must be `totp`

        * `LABEL` must be the issuer "Alert Logic", colon ":" and user's email, e.g. `Alert%20Logic:admin@company.com`

        * `secret` must be an arbitrary value between 16-20 bytes, in non-padded Base32 encoding, e.g., the ASCII string `"1s tHiS s3kr3t S4F3?"` is `GFZSA5CINFJSA4ZTNNZDG5BAKM2EMMZ7` in Base32

        * `issuer` must be "Alert Logic", i.e. `issuer=Alert%20Logic`

        * `algorithm` must be `SHA1`

        * `digits` must be an integer greater than or equal to 6; the default (if missing) is 6

        * `period` must be an integer between 30-60 (seconds); the default (if missing) is 30

        Example `mfa_uri: otpauth://totp/Alert%20Logic:admin@company.com?secret=GFZSA5CINFJSA4ZTNNZDG5BAKM2EMMZ7&issuer=Alert%20Logic&algorithm=SHA1`

        The request must also include `mfa_codes`, an array of 2 or more MFA codes generated by the MFA device. These codes must be valid prior to successful device enrollment.

        A user can only enroll an MFA device if they have not already enrolled one. If the user has already enrolled an MFA device, that device must be removed prior to enrolling a different one.

        Once a user enrolls an MFA device, the user is required to provide a valid `mfa_code` during username/password authentication.
      tags:
        - AIMS User MFA Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                'Enroll User MFA Device Response':
                  value:
                    id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                    account_id: '12345678'
                    name: Bob Dobalina
                    username: admin@company.com
                    email: admin@company.com
                    active: true
                    locked: false
                    mfa_enabled: true
                    version: 1
                    linked_users: []
                    created:
                      at: 1430185015
                      by: System
                    modified:
                      at: 1430185015
                      by: System
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - password_expired
                      - invalid_mfa_uri
                      - invalid_mfa_codes
        '401':
          $ref: '#/components/responses/InvalidSessionToken'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/MFAEnrolled'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_uri:
                  type: string
                  description: 'TOTP MFA URI, in otpauth:// format'
                mfa_codes:
                  type: array
                  description: list of String 2 or more MFA codes generated by the MFA device for verification.
                  items:
                    type: string
                email:
                  type: string
                  description: User email address (username)
                password:
                  type: string
                  description: User password
              required:
                - mfa_uri
                - mfa_codes
            examples:
              'Enroll MFA Body':
                value:
                  email: admin@company.com
                  password: Aa8^6;C28e748C
                  mfa_uri: otpauth://totp/Alert%20Logic:admin@company.com?secret=GFZSA5CINFJSA4ZTNNZDG5BAKM2EMMZ7&issuer=AlertLogic&algorithm=SHA1
                  mfa_codes: ['123456', '456789']
        description: ''
      parameters:
        - $ref: '#/components/parameters/x-aims-session-token'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |-
            curl -X POST "https://api.cloudinsight.alertlogic.com/aims/v1/user/mfa/enroll" \
            -H "Content-Type: application/json"
            -d @- << EOF
            {
                "email": "admin@company.com",
                "password": "Aa8^6;C28e748C",
                "mfa_uri": "otpauth://totp/Alert%20Logic:admin@company.com?secret=GFZSA5CINFJSA4ZTNNZDG5BAKM2EMMZ7&issuer=AlertLogic&algorithm=SHA1"
                "mfa_codes": ["123456", "456789"]
            }
            EOF
  '/aims/v1/user/mfa/{username}':
    parameters:
      - $ref: '#/components/parameters/URLEncodedUsername'
    delete:
      summary: "Remove User's Multi-Factor Authentication Device"
      operationId: remove_mfa_device
      description: |-
        **Remove a user's MFA device**
        
         Removes a user's MFA device. This endpoint can be called by any authenticated user to remove
         **their own** MFA device. Administrators (or other users with sufficient permissions) may remove
         the MFA device of another user.
        
         Once a user's MFA device is removed (user field `mfa_enabled` set to `false`), the user will no
         longer be required to enter an `mfa_code` during authentication. The user may then enroll a new
         MFA device if desired.
      tags:
        - AIMS User MFA Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Remove MFA Device:
                  value:
                    id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                    account_id: '12345678'
                    name: Bob Dobalina
                    username: admin@company.com
                    email: admin@company.com
                    active: true
                    locked: false
                    version: 1
                    linked_users: []
                    created:
                      at: 1430185015
                      by: System
                    modified:
                      at: 1430185015
                      by: System
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Request Sample
          source: |
            curl -X DELETE "https://api.global-services.global.alertlogic.com/aims/v1/user/mfa/admin%40company.com"
  '/aims/v1/{account_id}/users/{user_id}/access_keys':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/UserId'
    post:
      summary: Create Access Key
      operationId: create_access_key
      description: |-
        Create an access key for a user

        A label can be associated with an access key. If a label is specified, a valid JSON body must be provided.
        No more than 5 keys can be created for a user.
      tags:
        - AIMS User Access Key Resources
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKey'
              examples:
                'Create Access Key Response':
                  value:
                    access_key_id: 61fb235617960503
                    user_id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                    account_id: '12345678'
                    label: api access
                    created:
                      at: 1525410880
                      by: system
                    modified:
                      at: 1525410880
                      by: system
                    secret_key: c189b933c26ace44208bc6ed31739a1ce31d9b04f25a611dc3b6c9ee2806f9c7
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_label
                      - invalid_json
                      - limit_exceeded
                      - missing_required_property
                      - invalid_property
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
        '413':
          $ref: '#/components/responses/RequestEntityTooLarge'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  description: A label for the access key
      x-codeSamples:
        - lang: Shell
          label: Request Sample (unlabeled)
          source: |
            curl -X POST "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/access_keys"
        - lang: Request Sample (labeled)
          source: |
            curl -X POST -d '{"label": "api access"}' "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/access_keys"
    get:
      summary: List Access Keys
      operationId: list_access_keys
      description: |-
        List user access keys.

        If an output format is not specified using the out query parameter, only access key IDs are returned.
      tags:
        - AIMS User Access Key Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_keys:
                    type: array
                    items:
                      oneOf:
                        - type: string
                        - $ref: '#/components/schemas/AccessKey'
              examples:
                'List Access Keys default and ids_only':
                  value:
                    access_keys:
                      - 61fb235617960503
                      - c94bbb077a7ccf26
                'List Access Keys full details':
                  value:
                    access_keys:
                      - access_key_id: 61fb235617960503
                        user_id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                        account_id: '12345678'
                        label: api access
                        created:
                          at: 1525410880
                          by: system
                        modified:
                          at: 1525410880
                          by: system
                      - access_key_id: c94bbb077a7ccf26
                        user_id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                        account_id: '12345678'
                        created:
                          at: 1525410000
                          by: system
                        modified:
                          at: 1525410000
                          by: system
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      parameters:
        - $ref: '#/components/parameters/AccessKeysOut'
      x-codeSamples:
        - lang: Shell
          label: Request Sample (default and ids_only output)
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/access_keys"
        - lang: Shell
          label: Request Sample (full details output)
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/access_keys?out=full"
  '/aims/v1/{account_id}/users':
    parameters:
      - $ref: '#/components/parameters/AccountId'
    post:
      summary: Create User
      operationId: create_user
      description: |-
        **Create a user**
        
        The user's password must conform to the following standards:
        - Length of at least 12 characters
        - Contain three of four possible character types:
          - Upper case characters
          - Lower case characters
          - Numbers
          - Special characters (``!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~``)
        
        Passwords can be specified as UTF-8. Characters in languages that do not have upper or lower case variants qualify as either upper or lower case.
        
        It is possible to set a one time password by sending a query parameter (one_time_password) with a boolean value, see example below.
        
        The mobile phone number, phone number and webhook url fields are optional. If mobile phone and/or phone included, their strings must contain at least 10 numbers and be no more than 30 characters. If webhook url is included, the url must be a valid http/https url.
        
        The notifications_only flag is optional. If the flag is set to `true`, the user will not receive welcome email, password expiration/change related emails, and the user will not be able to authenticate.
      tags:
        - AIMS User Resources
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                'Response':
                  $ref: '#/components/examples/UserExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - account_inactive
                      - invalid_email
                      - invalid_json
                      - invalid_option
                      - invalid_role_id
                      - weak_password
                      - invalid_mobile_phone
                      - invalid_phone
                      - invalid_webhook_url
                      - missing_required_property
                      - invalid_property
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/UserExists'
        '410':
          $ref: '#/components/responses/Gone'
        '413':
          $ref: '#/components/responses/RequestEntityTooLarge'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      parameters:
        - $ref: '#/components/parameters/OneTimePassword'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Username
                email:
                  type: string
                  description: Email address
                password:
                  type: string
                  description: 'Password If a password is not passed to the user create call, the user will receive an email with a link to set the password.'
                role_id:
                  type: string
                  description: 'Role Id to grant the newly created user. The user will be granted this role unless it is the first user created in the account, which is always granted the administrator role.'
                active:
                  type: boolean
                  description: 'User status.'
                  default: true
                mobile_phone:
                  type: string
                  description: "An optional string containing a user's mobile phone number."
                phone:
                  type: string
                  description: "An optional string containing a user's phone number."
                webhook_url:
                  type: string
                  description: "An optional string containing a user's webhook url."
                notifications_only:
                  type: boolean
                  description: 'An optional boolean flag to make the user notifications only.'
                  default: false
              required:
                - name
                - email
            examples:
              'Create User Request':
                value:
                  name: Bob Dobalina
                  email: admin@company.com
                  password: Aa8^6;C28e748C
                  mobile_phone: 123-555-0123
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X POST -d '{ "name": "Bob Dobalina", "email": "admin@company.com", "mobile_phone": "123-555-0123" }' "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users"
        - lang: Shell
          label: Request Sample (one-time password)
          source: |
            curl -X POST -d '{ "name": "Bob Dobalina", "email": "admin@company.com", "password": "Aa8^6;C28e748C", "mobile_phone": "123-555-0123" }' "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users?one_time_password=true"
    get:
      summary: List Users
      operationId: list_users
      description: |
        List account users
      tags:
        - AIMS User Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Users Response Object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
              examples:
                'Response':
                  $ref: '#/components/examples/UsersExample'
                'Response (including role ids)':
                  $ref: '#/components/examples/UsersExampleRoleIds'
                'Response (including user credential)':
                  $ref: '#/components/examples/UsersExampleUserCredentials'
                'Response (including access keys)':
                  $ref: '#/components/examples/UsersExampleAccessKeys'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      parameters:
        - $ref: '#/components/parameters/FilterRoleId'
        - $ref: '#/components/parameters/IncludeRoleIds'
        - $ref: '#/components/parameters/IncludeUserCredential'
        - $ref: '#/components/parameters/IncludeAccessKeys'
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users"
        - lang: Shell
          label: Request Sample (including role ids)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users?include_role_ids=true"
        - lang: Shell
          label: Request Sample (including user credential)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users?include_user_credential=true"
        - lang: Shell
          label: Request Sample (including access keys)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users?include_access_keys=true"
  '/aims/v1/{account_id}/users/{user_id}/access_keys/{access_key_id}':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/UserId'
      - $ref: '#/components/parameters/AccessKeyId'
    get:
      summary: Get Access Key
      operationId: get_access_key
      description: "Get access key by ID"
      tags:
        - AIMS User Access Key Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKey'
              examples:
                'Get Access Key Response':
                  value:
                    access_key_id: 61fb235617960503
                    user_id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                    account_id: '12345678'
                    label: api access
                    created:
                      at: 1525410880
                      by: system
                    modified:
                      at: 1525410880
                      by: system
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/access_keys/61FB235617960503"
    delete:
      summary: Delete Access Key
      operationId: delete_access_key
      description: "Delete a user's access key"
      tags:
        - AIMS User Access Key Resources
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X DELETE "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/access_keys/61FB235617960503"
  '/aims/v1/{account_id}/users/{user_id}':
    parameters:
        - $ref: '#/components/parameters/AccountId'
        - $ref: '#/components/parameters/UserId'
    delete:
      summary: Delete User
      operationId: delete_user
      description: |-
        **Delete a user**
        User deletion is permanent. Due to caching and the distributed nature 
        of the data store, user deletion is also asynchronous; as a result,
        clients may be able to retrieve the deleted user for a brief period
        after deleting it.

        Users cannot delete themselves. Users that have been assigned the
        Administrator role can only be deleted if there is at least one other
        user with the Administrator role present.
      tags:
        - AIMS User Resources
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/SelfDelete'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X DELETE "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23"
    get:
      summary: Get User Details
      operationId: get_user_details
      description: |
        Get user details
      tags:
        - AIMS User Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                'Response':
                  $ref: '#/components/examples/UserDetailsExample'
                'Response (including role ids)':
                  $ref: '#/components/examples/UserDetailsExampleRoleIds'
                'Response (not including user credential)':
                  $ref: '#/components/examples/UserDetailsExampleWithoutUserCredential'
                'Response (not including access keys)':
                  $ref: '#/components/examples/UserDetailsExampleWithoutAccessKeys'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      parameters:
        - $ref: '#/components/parameters/IncludeRoleIdsTrue'
        - $ref: '#/components/parameters/IncludeUserCredentialTrue'
        - $ref: '#/components/parameters/IncludeAccessKeysTrue'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23"
        - lang: Shell
          label: Request Sample (including role ids)
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/12345678/user/715A4EC0-9833-4D6E-9C03-A537E3F98D23?include_role_ids=true"
        - lang: Shell
          label: Request Sample (not including user credential)
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/12345678/user/715A4EC0-9833-4D6E-9C03-A537E3F98D23?include_user_credential=false"
        - lang: Shell
          label: Request Sample (not including access keys)
          source: |
            curl -X "https://api.global-services.global.alertlogic.com/aims/v1/12345678/user/715A4EC0-9833-4D6E-9C03-A537E3F98D23?include_access_keys=false"
    post:
      summary: Update User Details
      operationId: update_user_details
      description: |-
        **Update user details**
        
        The user's active status, name, password, email, mobile phone, notifications only, or any combination of the five may be updated.
        Note that, if the client is requesting a change to his/her own user, the password, active and notifications_only fields may not be updated. Fields included in the request body that are not allowed to be updated are ignored.
        In order for the user to change his own password, use [Change Password](#operation/change_password) or [Reset Password](#operation/reset_password) endpoints instead. Request a system admin user to update user's active field.
        
        The user's password must conform to the following standards:
        - Cannot be identical to current or previous passwords (up to 4 previous passwords checked)
        - Length of at least 12 characters
        - Contain three of four possible character types:
          - Upper case characters
          - Lower case characters
          - Numbers
          - Special characters (``!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~``)
        
        Passwords can be specified as UTF-8. Characters in languages that do not have upper or lower case variants qualify as either upper or lower case.
        
        It is possible to set a one time password by sending a query parameter (`"one_time_password"`) with a boolean value, see example below.
        
        The mobile phone number, phone number and webhook url fields are optional. If mobile phone and/or phone included, their strings must contain at least 10 numbers and be no more than 30 characters. If webhook url is included, the url must be a valid http/https url.
        In order to clear the optional fields, mobile phone, phone and webhook url, you must set it to an empty string as seen in "clear optional field" usage example.
        
        The notifications only flag field is optional. If the flag is set to `true`, the user will not receive password expiration/change related emails and the user will not be able to authenticate.
      tags:
        - AIMS User Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                'Response':
                  $ref: '#/components/examples/UpdateUserExample'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_email
                      - invalid_json
                      - weak_password
                      - password_reuse_prevented
                      - invalid_mobile_phone
                      - invalid_phone
                      - invalid_webhook_url
                      - invalid_property
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/UserExists'
        '410':
          $ref: '#/components/responses/Gone'
        '413':
          $ref: '#/components/responses/RequestEntityTooLarge'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      parameters:
        - $ref: '#/components/parameters/OneTimePassword'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: New user name
                password:
                  type: string
                  description: New password
                email:
                  type: string
                  description: New email address
                active:
                  type: boolean
                  description: User status
                mobile_phone:
                  type: string
                  description: "An optional string containing a user's mobile phone number."
                phone:
                  type: string
                  description: "An optional string containing a user's phone number."
                webhook_url:
                  type: string
                  description: "An optional string containing a user's webhook url."
                notifications_only:
                  type: boolean
                  description: An optional boolean flag to make the user notifications only.
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X POST -d '{"name": "Bob Odenkirk", "email": "bodenkirk@company.com", "mobile_phone": "123-555-0124"}' "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23"
        - lang: Shell
          label: Request Sample (set one-time password)
          source: |
            curl -X POST -d '{"password": "29a7B#1FeF*q73_f8"}' "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23?one_time_password=true"
        - lang: Shell
          label: Request Sample (deactivate user)
          source: |
            curl -X POST -d '{"active": false}' "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23"
        - lang: Shell
          label: Request Sample (clear optional field)
          source: |
            curl -X POST -d '{"phone": ""}' "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23"
  '/aims/v1/user/{user_id}':
    parameters:
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get User Details by User ID
      operationId: get_user_details_by_id
      description: Get user details by user ID
      tags:
        - AIMS User Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                'Response':
                  $ref: '#/components/examples/UserDetailsExample'
                'Response (including role ids)':
                  $ref: '#/components/examples/UserDetailsExampleRoleIds'
                'Response (not including user credential)':
                  $ref: '#/components/examples/UserDetailsExampleWithoutUserCredential'
                'Response (not including access keys)':
                  $ref: '#/components/examples/UserDetailsExampleWithoutAccessKeys'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      parameters:
        - $ref: '#/components/parameters/IncludeRoleIdsTrue'
        - $ref: '#/components/parameters/IncludeUserCredentialTrue'
        - $ref: '#/components/parameters/IncludeAccessKeysTrue'
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/715A4EC0-9833-4D6E-9C03-A537E3F98D23"
        - lang: Shell
          label: Request Sample (including role ids)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/715A4EC0-9833-4D6E-9C03-A537E3F98D23?include_role_ids=true"
        - lang: Shell
          label: Request Sample (not including user credential)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/715A4EC0-9833-4D6E-9C03-A537E3F98D23?include_user_credential=false"
        - lang: Shell
          label: Request Sample (not including access keys)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/715A4EC0-9833-4D6E-9C03-A537E3F98D23?include_access_keys=false"
  '/aims/v1/user/email/{email}':
    parameters:
      - $ref: '#/components/parameters/URLEncodedEmail'
    get:
      summary: Get User Details by Email (DEPRECATED)
      operationId: get_user_details_by_email
      description: |-
        **Get user details by email**

        This endpoint has been deprecated and only mantained for backwards compatibility. This operates the same way of
        [get user details by username](#operation/get_user_details_by_username).
        In order to retrieve users by email, see [list users by email](#operation/list_users_by_email).
      tags:
        - AIMS User Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                'Response':
                  $ref: '#/components/examples/UserDetailsExample'
                'Response (including role ids)':
                  $ref: '#/components/examples/UserDetailsExampleRoleIds'
                'Response (not including user credential)':
                  $ref: '#/components/examples/UserDetailsExampleWithoutUserCredential'
                'Response (not including access keys)':
                  $ref: '#/components/examples/UserDetailsExampleWithoutAccessKeys'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      parameters:
        - $ref: '#/components/parameters/IncludeRoleIdsTrue'
        - $ref: '#/components/parameters/IncludeUserCredentialTrue'
        - $ref: '#/components/parameters/IncludeAccessKeysTrue'
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/email/admin%40company.com"
        - lang: Shell
          label: Request Sample (including role ids)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/email/admin%40company.com?include_role_ids=true"
        - lang: Shell
          label: Request Sample (not including user credential)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/email/admin%40company.com?include_user_credential=false"
        - lang: Shell
          label: Request Sample (not including access keys)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/email/admin%40company.com?include_access_keys=false"
  '/aims/v1/user/username/{username}':
    parameters:
      - $ref: '#/components/parameters/URLEncodedUsername'
    get:
      summary: Get User Details by Username
      operationId: get_user_details_by_username
      description: Get user details by username
      tags:
        - AIMS User Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                'Response':
                  $ref: '#/components/examples/UserDetailsExample'
                'Response (including role ids)':
                  $ref: '#/components/examples/UserDetailsExampleRoleIds'
                'Response (not including user credential)':
                  $ref: '#/components/examples/UserDetailsExampleWithoutUserCredential'
                'Response (not including access keys)':
                  $ref: '#/components/examples/UserDetailsExampleWithoutAccessKeys'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      parameters:
        - $ref: '#/components/parameters/IncludeRoleIdsTrue'
        - $ref: '#/components/parameters/IncludeUserCredentialTrue'
        - $ref: '#/components/parameters/IncludeAccessKeysTrue'
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/username/admin%40company.com"
        - lang: Shell
          label: Request Sample (including role ids)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/username/admin%40company.com?include_role_ids=true"
        - lang: Shell
          label: Request Sample (not including user credential)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/username/admin%40company.com?include_user_credential=false"
        - lang: Shell
          label: Request Sample (not including access keys)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/user/username/admin%40company.com?include_access_keys=false"
  '/aims/v1/{account_id}/users/{user_id}/roles':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get Assigned Roles
      operationId: get_assigned_roles
      description: |-
        **Get user roles**
      tags:
        - AIMS User Roles Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
              examples:
                'Response':
                  $ref: '#/components/examples/UserRolesExample'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/roles"
  '/aims/v1/{account_id}/users/{user_id}/role_ids':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get Assigned Role Ids
      operationId: get_assigned_role_ids
      description: |-
        **Get user role ids**
      tags:
        - AIMS User Roles Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  role_ids:
                    type: string
              examples:
                'Response':
                  value:
                    role_ids:
                      - 4389AB00-BBCC-4EB1-83E9-7A906A452BF0
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/role_ids"
  '/aims/v1/{account_id}/users/{user_id}/permissions':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/UserId'
    get:
      summary: Get User Permissions
      operationId: get_user_permissions
      description: |-
        **Get user permissions**

        User's permissions are derived from the intersection of the permissions that they have
        based on the roles granted to the user.
        
        For instance, If a user has a role that allows them permission `{"\*:own:get:account": "allowed"}`, and another role that denies them that
        same permission `{"\*:own:get:account": "denied"}`, the permissions list will only show the deny entry.
      tags:
        - AIMS User Roles Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  permissions:
                    type: array
                    items:
                      type: object
              examples:
                'Get User Permissions Response':
                  value:
                    permissions:
                      - '*:managed:*:*': allowed
                      - '*:own:*:*': allowed
                      - '*::get:*': allowed
                      - '*::list:*': allowed
                      - 'aims:own:create:role': denied
                      - 'aims:own:update:role': denied
                      - 'aims:own:delete:role': denied
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/permissions"
  '/aims/v1/{account_id}/users/{user_id}/roles/{role_id}':
    parameters:
      - $ref: '#/components/parameters/AccountId'
      - $ref: '#/components/parameters/UserId'
      - $ref: '#/components/parameters/RoleId'
    put:
      summary: Grant User Role
      operationId: grant_user_role
      description: |
        **Grant a role to a user**

        Users cannot grant roles to themselves. When granting the Administrator role to a user, all roles previously granted to that user will be revoked.
      tags:
        - AIMS User Roles Resources
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - self_grant_error
                      - invalid_role_id
                      - admin_account_immutable
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X PUT "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/roles/2A33175D-86EF-44B5-AA39-C9549F6306DF"
    delete:
      summary: Revoke User Role
      operationId: revoke_user_role
      description: |-
        Revoke a role for a user

        Users cannot revoke roles assigned to themselves. When revoking the Administrator role from a user, there must be at least one other user with the Administrator role present.
      tags:
        - AIMS User Roles Resources
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - self_revoke_error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '410':
          $ref: '#/components/responses/Gone'
        '503':
          $ref: '#/components/responses/WritesDisabled'
      security:
        - x-aims-auth-token: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X DELETE "https://api.global-services.global.alertlogic.com/aims/v1/12345678/users/715A4EC0-9833-4D6E-9C03-A537E3F98D23/roles/2A33175D-86EF-44B5-AA39-C9549F6306DF"
  '/aims/v1/users/email/{email}':
    parameters:
      - $ref: '#/components/parameters/URLEncodedEmail'
    get:
      summary: List Users By Email
      operationId: list_users_by_email
      description: List Users By Email
      tags:
        - AIMS User Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
              examples:
                'Response':
                  $ref: '#/components/examples/UsersExample'
                'Response (including role ids)':
                  $ref: '#/components/examples/UsersExampleRoleIds'
                'Response (including user credential)':
                  $ref: '#/components/examples/UsersExampleUserCredentials'
                'Response (including access keys)':
                  $ref: '#/components/examples/UsersExampleAccessKeys'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
      security:
        - x-aims-auth-token: []
      parameters:
        - $ref: '#/components/parameters/IncludeRoleIds'
        - $ref: '#/components/parameters/IncludeUserCredential'
        - $ref: '#/components/parameters/IncludeAccessKeys'
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/users/email/admin%40company.com"
        - lang: Shell
          label: Request Sample (including role ids)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/users/email/admin%40company.com?include_role_ids=true"
        - lang: Shell
          label: Request Sample (including user credential)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/users/email/admin%40company.com?include_user_credential=true"
        - lang: Shell
          label: Request Sample (including access keys)
          source: |
            curl -X GET "https://api.global-services.global.alertlogic.com/aims/v1/users/email/admin%40company.com?include_access_keys=true"
  '/aims/v1/access_keys/{access_key_id}':
    parameters:
      - $ref: '#/components/parameters/AccessKeyId'
    post:
      summary: Update Access Key
      operationId: update_access_key
      description: Update access key by ID
      tags:
        - AIMS User Access Key Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessKey'
              examples:
                'Update Access Key Response':
                  value:
                    access_key_id: 61fb235617960503
                    user_id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                    account_id: '12345678'
                    label: updated label
                    created:
                      at: 1524510292
                      by: system
                    modified:
                      at: 1525410880
                      by: system
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_label
                      - invalid_property
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - x-aims-auth-token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                label:
                  type: string
                  description: access key label to be updated
        description: JSON with a label to be updated
      x-codeSamples:
        - lang: Shell
          label: Request Sample
          source: |
            curl -X POST -d '{"label": "updated label"}' "https://api.global-services.global.alertlogic.com/aims/v1/access_keys/61fb235617960503"
  '/aims/v1/authenticate':
    post:
      summary: Authenticate
      operationId: authenticate
      description: |-
        Authenticate a user's identity

        The authenticate endpoint is used to verify a user's credentials (access key or username/password).
        Users may authenticate by base64 encoding the string `username:password` (or
        `access_key_id:secret_key`) and prepending it with the string `Basic ` per
        [RFC 2617](https://tools.ietf.org/html/rfc2617). Note that common tools like `curl` and most HTTP
        libraries support encoding this automatically.
        
        Successful authentication returns `200 OK` with a JSON body containing the key 
        `authentication.token`. This token may be passed (as the `X-Aims-Auth-Token` header) to subsequent
        API requests which require a user to be authenticated. The user's profile data is also included in
        the `authentication` key of the response body (see the examples below).
        
        If authentication fails, `401 Unauthorized` with an empty body and no HTTP headers is returned to
        the client.
        
        
        **Multi-Factor Authentication (MFA)**
        
        If the user is enrolled in Multi-Factor Authentication, then the `mfa_code` parameter
        must be passed. If a user inputs their correct `username:password`, but does not include the
        `mfa_code`, then a `401 Unauthorized` with a JSON body containing the `mfa_code_required`
        `error` key is returned to the client. If the user is required to use MFA but has not configured
        it, the `error` key is `mfa_enrollment_required` instead. In *both* cases, an
        `x-aims-session-token` header is also returned. This session token can be used to
        complete authentication without re-entering the username and password, but must be used within
        3 minutes.
        
        If an `mfa_code` is required, the client can call `POST /aims/v1/authenticate` again with the
        required `mfa_code` in the JSON POST body and either:
        
        * The `x-aims-session-token` header from the initial authentication attempt
        * The Basic `Authorization` header with the `username:password` described above
        
        Upon successful authentication, `200 OK` is returned with a complete body as described above.
        
        If the `x-aims-session-token` header is expired or invalid, `401 Unauthorized` with a JSON body
        containing the `invalid_session_token` `error` key is returned to the client.
        
        If the `mfa_code` value is incorrect or missing, `401 Unauthorized` with an empty body and no
        HTTP headers is returned to the client.
      tags:
        - AIMS Authentication and Authorization Resources
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  authentication:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
                      account:
                        $ref: '#/components/schemas/Account'
                      token:
                        type: string
                      token_expiration:
                        type: number
              examples:
                'Successful Authentication Response':
                  value:
                    authentication:
                      user:
                        id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
                        account_id: '12345678'
                        name: Bob Dobalina
                        email: bob@company.com
                        active: true
                        locked: false
                        version: 1
                        created:
                          at: 1430183768
                          by: System
                        modified:
                          at: 1430183768
                          by: System
                      account:
                        id: '12345678'
                        name: Company Name
                        active: true
                        version: 1
                        accessible_locations:
                          - insight-us-virginia
                        default_location: insight-us-virginia
                        created:
                          by: system
                          at: 1436482061
                        modified:
                          by: system
                          at: 1436482061
                      token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiMDAwMDAwMDAiLCJhY2NvdW50IjoiMDAwMDAwMDAiLCJleHBpcmF0aW9uIjoxNDMwMTg0Nzc2LCJyZW5ld19jb3VudGRvd24iOjI0fQ==.QKRHma5zAOdhU50ZE4ryPxVpvKt0A0gbjY62xHCWm8s=
                      token_expiration: 1434042731
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - password_expired
                      - account_inactive
              examples:
                'password_expired':
                  value:
                    error: password_expired
                'account_inactive':
                  value:
                    error: account_inactive         
        '401':
          description: Unauthorized
          headers:
            'x-aims-session-token':
              description: |-
                The session token for authenticating with `mfa_code`. The `x-aims-session-token` header will only be
                returned if the username/password authentication was successful but the user has MFA enabled and it
                was not provided. To proceed with authentication, you can provide this header along with a MFA code
                genarated through the user's MFA enrolled device.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - mfa_code_required
                      - invalid_session_token
                      - mfa_enrollment_required
              examples:
                "401 invalid_session_token":
                  value:
                    error: invalid_session_token
                "401 mfa_code_required":
                  value:
                    error: mfa_code_required
                "401 mfa_enrollment_required":
                  value:
                    error: mfa_enrollment_required
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_code:
                  type: string
                  description: "The MFA code generated by the user's MFA device"
      parameters:
        - $ref: '#/components/parameters/x-aims-session-token'
      security:
        - BasicAuth: []
      x-codeSamples:
        - lang: Shell
          label: Request Sample (authenticate with username/password)
          source: |
            curl -X POST -u username:password "https://api.global-services.global.alertlogic.com/aims/v1/authenticate"
        - lang: Shell
          label: Request Sample (authenticate with access key)
          source: |
            curl -X POST -u access_key_id:secret_key "https://api.global-services.global.alertlogic.com/aims/v1/authenticate"
        - lang: Shell
          label: Request Sample (authenticate with MFA code and session token)
          source: |
            curl -X POST -d '{"mfa_code": "123456"}' -H "x-aims-session-token: a3e12fwafge1g9" "https://api.global-services.global.alertlogic.com/aims/v1/authenticate"
        - lang: Shell
          label: Request Sample (authenticate with username/password and MFA code)
          source: |
            curl -X POST -u username:password -d '{"mfa_code": "123456"}' "https://api.global-services.global.alertlogic.com/aims/v1/authenticate"
components:
  parameters:
    ## Query parameters
    AccessibleLocations:
      schema:
        type: string
      in: query
      name: accessible_locations
      description: 'Filter by `accessible_location` ids. Use comma separated format for multiple locations e.g. "insight-us-virginia,defender-us-denver"'
    AccessKeysOut:
      schema:
        type: string
        enum:
          - ids_only
          - full
      in: query
      name: out
      description: |-
        Query param to define if the output should return a full (`full`) description of access keys or the list of
        access keys ids only (`ids_only`). If not set, defaults to `ids_only`
    Active:
      schema:
        type: boolean
      in: query
      name: active
      description: 'Filter by account `active` status'
    Fields:
      in: query
      name: fields
      description: |-
        A comma-separated list of fields to include in the account, or simply `all` to include
        all fields. Only top-level fields are supported. Note that the `"id"` is always
        included: If it is not included in the `fields` option, it will be automatically added
        to the fields given, if any.
      required: false
      schema:
        type: string
    FilterRoleId:
      schema:
        type: string
      in: query
      name: role_id
      description: 'The role ID assigned to the user. If passed, only users who are granted the role with the specified role ID are returned.'
    IncludeAccessKeys:
      schema:
        type: boolean
      in: query
      name: include_access_keys
      description: 'Optional query parameter to include the access keys of each user in the response. If not set, defaults to false.'
    IncludeAccessKeysTrue:
      schema:
        type: boolean
      in: query
      name: include_access_keys
      description: 'Optional query parameter to include the access keys of the user. If not set, defaults to true.'
    IncludeRoleIds:
      schema:
        type: boolean
      in: query
      name: include_role_ids
      description: 'Optional query parameter to include the list of role ids assigned to each user in the response. If not set, defaults to false.'
      x-example: '?include_role_ids=true'
    IncludeRoleIdsTrue:
      schema:
        type: boolean
      in: query
      name: include_role_ids
      description: 'Optional query parameter to return the list of role ids assigned to the user. If not set, defaults to true.'
    IncludeUserCredential:
      schema:
        type: boolean
      in: query
      name: include_user_credential
      description: 'Optional query parameter to include the user credential object of each user in the response. If not set, defaults to false.'
    IncludeUserCredentialTrue:
      schema:
        type: boolean
      in: query
      name: include_user_credential
      description: 'Optional query parameter to include the user credential object of the user. If not set, defaults to true.'
    MFARequired:
      schema:
        type: string
      in: query
      name: mfa_required
      description: 'Filter by account `mfa_required` property'
    OneTimePassword:
      schema:
        type: boolean
      in: query
      name: one_time_password
      description: 'Create or update a user with a one time password credential. If not set, one_time_password defaults to false.'
    ## Path parameters
    AccessKeyId:
      schema:
        type: string
      name: access_key_id
      in: path
      required: true
      description: 'Access Key ID.'
    AccountId:
      schema:
        type: string
      name: account_id
      in: path
      required: true
      description: 'AIMS Account ID.'
    AccountName:
      schema:
        type: string
      name: name
      in: path
      required: true
      description: |-
        Account name, URL encoded according to [RFC3986](https://tools.ietf.org/html/rfc3986).
        Note that the `+` character is not interpreted as a space (` `) in this scheme; use
        `%20` for spaces instead.
    PasswordResetToken:
      schema:
        type: string
      name: token
      in: path
      required: true
      description: 'Password reset token'
    RelatedAccountId:
      schema:
        type: string
      name: related_account_id
      in: path
      required: true
      description: 'Possibly related account ID'
    Relationship:
      schema:
        type: string
        enum:
          - bills_to
          - managed
          - managing
      name: relationship
      in: path
      required: true
      description: 'Account relationship. Accepted values: `bills_to`, `managed`, `managing`.'
    RoleId:
      schema:
        type: string
      name: role_id
      in: path
      required: true
      description: 'Role ID.'
    URLEncodedEmail:
      schema:
        type: string
      name: email
      in: path
      required: true
      description: 'User Email (URL encoded)'
    URLEncodedUsername:
      schema:
        type: string
      name: username
      in: path
      required: true
      description: 'User Username (URL encoded).'
    UserId:
      schema:
        type: string
      name: user_id
      in: path
      required: true
      description: AIMS User ID
    ## Header parameters
    x-aims-session-token:
      in: header
      schema:
        type: string
      name: x-aims-session-token
      description: |-
        The session token for authenticating with `mfa_code`; The session token header from a call to POST /aims/v1/authenticate.
        Note that this header is **optional**.
  responses:
    ## 204 No Content
    NoContent:
      description: No Content
    ## 400 Bad Request squemas
    SelfDelete:
      description: "`400 Bad Request`. Client used a user to delete itself."
      content:
        application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - self_delete_error
    ## 401 Unauthorized schemas
    MFACodeRequired:
      description: "`401 Unauthorized`. The client must provide a valid `mfa_code` to successfully authenticate."
      headers:
        'x-aims-session-token':
          description: "The session token for authenticating with `mfa_code`."
          schema:
            type: string
      content:
        application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - mfa_code_required
    MFAEnrollmentRequired:
      description: "`401 Unauthorized`. The client must enroll in MFA to successfully authenticate."
      headers:
        'x-aims-session-token':
          description: "The session token for authenticating with `mfa_code`."
          schema:
            type: string
      content:
        application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - mfa_enrollment_required
    InvalidSessionToken:
      description: "`401 Unauthorized`. The provided `x-aims-session-token` is invalid or has expired."
      content:
        application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    enum:
                      - invalid_session_token
    Unauthorized:
      description: "`401 Unauthorized`. The `AuthenticationToken` passed could not be authenticated."
    UnauthorizedCredentials:
      description: "`401 Unauthorized`. The credentials passed could not be authenticated."
    ## 403 Forbidden schema
    Forbidden:
      description: "`403 Forbidden`. Insufficient permissions."
    ## 404 Not Found schema
    NotFound:
      description: "`404 Not Found`. The requested AIMS object was not found."
    ## 409 Conflic schemas
    UserExists:
      description: "`409 Conflict`. An user with one or more of these details already exists."
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                enum:
                  - user_exists
    MFAEnrolled:
      description: "`409 Conflict`. The specified user is already enrolled in MFA."
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                enum:
                  - mfa_enrolled
    ## 410 Gone schemas
    Gone:
      description: "`410 Gone`. The requested AIMS object (or an associated AIMS object, such as an account) has been deleted."
    ## 413 Request Entity Too Large schema
    RequestEntityTooLarge:
      description: "`413 Request Entity Too Large`. The request body size exceeds the configured body size limit which is 1MB."
    ## 503 Service Unavailable schema
    WritesDisabled:
      description: "`503 Service Unavailable`. Server writes are disabled."
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                enum:
                  - writes_disabled
          examples:
            'Server writes are disabled error':
              value:
                error: writes_disabled
  schemas:
    Timestamp:
      type: number
      description: "Epoch & Unix Timestamp (RFC 3339)"
    Version:
      title: Version
      type: number
      description: Object Version
    Created:
      title: Created
      type: object
      properties:
          at:
            $ref: '#/components/schemas/Timestamp'
          by:
            type: string
            description: User ID that Created the Object
    Modified:
      title: Modified
      type: object
      properties:
          at:
            $ref: '#/components/schemas/Timestamp'
          by:
            type: string
            description: User ID of the Last User that Modified the Object
    Account:
      title: Account
      type: object
      description: AIMS Account Information
      x-examples:
        'Account Info':
          id: '12345678'
          name: Company Name
          active: true
          version: 1
          accessible_locations:
            - insight-us-virginia
          default_location: insight-us-virginia
          created:
            at: 1430184599
            by: System
          modified:
            at: 1430184599
            by: System
      properties:
        id:
          type: string
          description: Account ID
        name:
          type: string
          description: Account Name
        active:
          type: boolean
          description: Account Active Status
        version:
          $ref: '#/components/schemas/Version'
        accessible_locations:
          type: array
          description: List of Account's Accessible Locations
          items:
            type: string
        default_location:
          description: Account's Default Location
          type: string
        created:
          $ref: '#/components/schemas/Created'
        modified:
          $ref: '#/components/schemas/Modified'
      required:
        - id
        - name
    UserCredential:
      title: UserCredential
      type: object
      properties:
        version:
          $ref: '#/components/schemas/Version'
        one_time_password:
          type: boolean
        last_login:
          type: number
        created:
          $ref: '#/components/schemas/Created'
        modified:
          $ref: '#/components/schemas/Modified'
    User:
      title: User
      type: object
      properties:
        id:
          type: string
          description: UUID
        account_id:
          type: string
          description: Account ID
        name:
          type: string
          description: User's Name
        username:
          type: string
          description: User's Username
        email:
          type: string
          description: User's Email
        active:
          type: boolean
          description: User's Active Status
        locked:
          type: boolean
          description: User's Locked Status
        linked_users:
          type: array
          items:
            type: object
            properties:
              location:
                type: string
                description: Linked User's Location
              user_id:
                type: number
                description: Linked User's ID
        created:
          $ref: '#/components/schemas/Created'
        modified:
          $ref: '#/components/schemas/Modified'
        user_credential:
          $ref: '#/components/schemas/UserCredential'
        access_keys:
          type: array
          items:
            $ref: '#/components/schemas/AccessKey'
        version:
          $ref: '#/components/schemas/Version'
    Role:
      title: Role
      type: object
      properties:
        id:
          type: string
          description: Role ID
        account_id:
          type: string
          description: Account ID
        name:
          type: string
          description: Role Name
        permissions:
          type: object
          properties:
            '[permission]':
              type: string
        legacy_permissions:
          type: array
          items:
            type: string
        version:
          $ref: '#/components/schemas/Version'
        created:
          $ref: '#/components/schemas/Created'
        modified:
          $ref: '#/components/schemas/Modified'
    AccessKey:
      title: AccessKey
      type: object
      properties:
        label:
          type: string
          description: Access Key Label
        last_login:
          type: number
          description: Last Login Epoch Timestamp
        created:
          $ref: '#/components/schemas/Created'
        modified:
          $ref: '#/components/schemas/Modified'
        access_key_id:
          type: string
          description: Access Key Id
      description: User Access Key
    Topology:
      title: Topology
      type: object
      properties:
        id:
          type: string
          description: Account ID
        managed:
          type: array
          items:
            type: object
            description: Topology
  securitySchemes:
    x-aims-auth-token:
      name: x-aims-auth-token
      type: apiKey
      in: header
      description: AIMS Authentication Token
    BasicAuth:
      type: http
      scheme: basic
  examples:
    UserRolesExample:
      value:
        roles:
          - id: 4389AB00-BBCC-4EB1-83E9-7A906A452BF0
            account_id: '12345678'
            name: 'Administrator'
            permissions:
              - '*:own:*:*': 'allowed'
            legacy_permissions: []
            version: 1
            created:
              at: 1430185015
              by: 'system'
            modified:
              at: 1430185015
              by: 'system'
    UsersExample:
      value:
        users:
          - id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
            account_id: '12345678'
            name: Bob Dobalina
            username: admin@company.com
            email: admin@company.com
            active: true
            locked: false
            version: 1
            linked_users:
              - location: defender-us-denver
                user_id: 102
            created:
              at: 1430185015
              by: System
            modified:
              at: 1430185015
              by: System
    UsersExampleRoleIds:
      value:
        users:
          - id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
            account_id: '12345678'
            name: Bob Dobalina
            username: admin@company.com
            email: admin@company.com
            active: true
            locked: false
            version: 1
            linked_users:
              - location: defender-us-denver
                user_id: 102
            role_ids: ['2A33175D-86EF-44B5-AA39-C9549F6306DF']
            created:
              at: 1430185015
              by: System
            modified:
              at: 1430185015
              by: System
    UsersExampleUserCredentials:
      value:
        users:
          - id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
            account_id: '12345678'
            name: Bob Dobalina
            username: admin@company.com
            email: admin@company.com
            active: true
            locked: false
            version: 2
            linked_users:
              - location: defender-us-denver
                user_id: 102
            user_credential:
              version: 2
              one_time_password: false
              last_login: 1548880711
              created:
                at: 1430185015
                by: System
              modified:
                at: 1430185015
                by: System
            created:
              at: 1430185015
              by: System
            modified:
              at: 1430185015
              by: System
    UsersExampleAccessKeys:
      value:
        users:
          - id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
            account_id: '12345678'
            name: Bob Dobalina
            username: admin@company.com
            email: admin@company.com
            active: true
            locked: false
            version: 2
            linked_users:
              - location: defender-us-denver
                user_id: 102
            created:
              at: 1430185015
              by: System
            modified:
              at: 1430185015
              by: System
            access_keys:
              - label: api access
                last_login: 0
                created:
                  at: 1525410880
                  by: system
                modified:
                  at: 1525410880
                  by: system
                access_key_id: 61fb235617960503
    UserExample:
      value:
        id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
        account_id: '12345678'
        name: Bob Dobalina
        username: admin@company.com
        email: admin@company.com
        active: true
        locked: false
        version: 1
        linked_users:
          - location: defender-us-denver
            user_id: 102
        created:
          at: 1430185015
          by: System
        modified:
          at: 1430185015
          by: System
    UserDetailsExample:
      value:
        id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
        account_id: '12345678'
        name: Bob Dobalina
        username: admin@company.com
        email: admin@company.com
        active: true
        locked: false
        version: 2
        linked_users:
          - location: defender-us-denver
            user_id: 102
        user_credential:
          version: 2
          one_time_password: false
          last_login: 1548880711
          created:
            at: 1430185015
            by: System
          modified:
            at: 1430185015
            by: System
        created:
          at: 1430185015
          by: System
        modified:
          at: 1430185015
          by: System
        access_keys:
          - label: api access
            last_login: 0
            created:
              at: 1525410880
              by: system
            modified:
              at: 1525410880
              by: system
            access_key_id: 61fb235617960503
    UserDetailsExampleRoleIds:
      value:
        id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
        account_id: '12345678'
        name: Bob Dobalina
        username: admin@company.com
        email: admin@company.com
        active: true
        locked: false
        version: 2
        linked_users:
          - location: defender-us-denver
            user_id: 102
        role_ids: ['2A33175D-86EF-44B5-AA39-C9549F6306DF']
        user_credential:
          version: 2
          one_time_password: false
          last_login: 1548880711
          created:
            at: 1430185015
            by: System
          modified:
            at: 1430185015
            by: System
        created:
          at: 1430185015
          by: System
        modified:
          at: 1430185015
          by: System
        access_keys:
          - label: api access
            last_login: 0
            created:
              at: 1525410880
              by: system
            modified:
              at: 1525410880
              by: system
            access_key_id: 61fb235617960503
    UserDetailsExampleWithoutUserCredential:
      value:
        id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
        account_id: '12345678'
        name: Bob Dobalina
        username: admin@company.com
        email: admin@company.com
        active: true
        locked: false
        version: 2
        linked_users:
          - location: defender-us-denver
            user_id: 102
        created:
          at: 1430185015
          by: System
        modified:
          at: 1430185015
          by: System
        access_keys:
          - label: api access
            last_login: 0
            created:
              at: 1525410880
              by: system
            modified:
              at: 1525410880
              by: system
            access_key_id: 61fb235617960503
    UserDetailsExampleWithoutAccessKeys:
      value:
        id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
        account_id: '12345678'
        name: Bob Dobalina
        username: admin@company.com
        email: admin@company.com
        active: true
        locked: false
        version: 2
        linked_users:
          - location: defender-us-denver
            user_id: 102
        user_credential:
          version: 2
          one_time_password: false
          last_login: 1548880711
          created:
            at: 1430185015
            by: System
          modified:
            at: 1430185015
            by: System
        created:
          at: 1430185015
          by: System
        modified:
          at: 1430185015
          by: System
    UpdateUserExample:
      value:
        id: 715A4EC0-9833-4D6E-9C03-A537E3F98D23
        account_id: '12345678'
        name: Bob Dobalina
        username: admin@company.com
        email: admin@company.com
        active: true
        locked: false
        version: 3
        linked_users:
          - location: defender-us-denver
            user_id: 102
        mobile_phone: '123-555-0124'
        created:
          at: 1430185015
          by: System
        modified:
          at: 1430186429
          by: System
tags:
  - name: AIMS Account Resources
    description: AIMS Account Resources Operations
  - name: AIMS Authentication and Authorization Resources
    description: AIMS Authentication and Authorization Resources Operations
  - name: AIMS Role Resources
    description: AIMS Role Resources Operations
  - name: AIMS User Access Key Resources
    description: AIMS User Access Key Resources Operations
  - name: AIMS User MFA Resources
    description: AIMS User MFA Resources Operations
  - name: AIMS User Resources
    description: AIMS User Resources Operations
